@model Statistics
@{
    ViewData["Title"] = "Statistics";
    ViewData["help_Text"] = @"In the Statistics page you can see the numbers behind the app!";
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

 <div>
  <h1 class="friends-page">Registered Accounts: @Model.registeredUsersCount</h1>
  <h1 class="friends-page">Average Rating: @Model.gameRatingAverage</h1>
</div>

<div style = "display: flex">
  @* div onde está o chart dos logins*@
  <div style="width:50rem; height:50rem; margin-left: 5rem">
    <canvas id="dailyLoginChart"></canvas>
  </div>

  @* div onde está o chart dos acessos*@
  <div style="width:50rem; height:50rem; margin-left: 5rem">
    <canvas id="dailyAccessChart"></canvas>
  </div>
</div>



<script>
  //Chart dos logins
  var ctx = document.getElementById('dailyLoginChart').getContext('2d');
  var myChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: @Html.Raw(Json.Serialize(Model.LoginDateList)),
      datasets: [{
        label: 'Daily Loggins',
        data: @Html.Raw(Json.Serialize(Model.LoginDateCountList)),
        backgroundColor: [
          'rgb(152, 0, 141, 1)',
        ],
        borderColor: [
          'rgb(152, 0, 141, 1)',
        ],
        borderWidth: 1,
        tension: 0.1
      }]
    },
     options: {
       scales: {
         y: {
           beginAtZero: true,
           ticks: {
            color: 'white',
          }
         },
        x: {
          ticks: {
            color: 'white',
          }
        }
       }
     }
  });

  //Chart dos acessos
  var ctx2 = document.getElementById('dailyAccessChart').getContext('2d');
  var myChart = new Chart(ctx2, {
    type: 'line',
    data: {
      labels: @Html.Raw(Json.Serialize(Model.AccessDateList)),
      datasets: [{
        label: 'Daily Access',
        data: @Html.Raw(Json.Serialize(Model.AccessDateCountList)),
        backgroundColor: [
          'rgb(152, 0, 141, 1)',
        ],
        borderColor: [
          'rgb(152, 0, 141, 1)',
        ],
        borderWidth: 1,
        tension: 0.1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true,
          ticks: {
            color: 'white',
          }
        },
        x: {
          ticks: {
            color: 'white',
          }
        }
      }
    }
  });
</script>